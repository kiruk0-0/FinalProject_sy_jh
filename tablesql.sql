--○ 관리자(ADMIN)
CREATE TABLE ADMIN
( ADMIN_NUM         NUMBER
, ADMIN_ID          VARCHAR2(40)     NOT NULL
, ADMIN_PW          VARCHAR2(60)     NOT NULL
, ADMIN_NAME        VARCHAR2(30)     NOT NULL
, REG_DATE    	    DATE             DEFAULT SYSDATE
, CONSTRAINT ADMIN_PK PRIMARY KEY(ADMIN_NUM)
, CONSTRAINT ADMIN_ID_UK UNIQUE(ADMIN_ID)
);
--==>> Table ADMIN이(가) 생성되었습니다.


--○ 사용자 생성 번호(USER_LIST)
CREATE TABLE USER_LIST
( USER_NUM	CHAR(10)
, CONSTRAINT USER_LIST_PK PRIMARY KEY(USER_NUM)
);
--==>> Table USER_LIST이(가) 생성되었습니다.


--○ 이용중인 회원 정보(USING_USER)
CREATE TABLE USING_USER
( USER_ID            VARCHAR2(40)
, USER_PW            VARCHAR2(60)     NOT NULL
, USER_NUM           CHAR(10)         NOT NULL
, USER_NAME          VARCHAR2(30)     NOT NULL
, USER_SSN1          CHAR(6)          NOT NULL
, USER_SSN2          VARCHAR2(40)     NOT NULL
, USER_TEL           VARCHAR2(20)     NOT NULL
, USER_NICKNAME      VARCHAR2(40)     NOT NULL
, USER_EMAIL         VARCHAR2(100)
, REG_DATE           DATE             DEFAULT SYSDATE
, CONSTRAINT USING_USER_PK PRIMARY KEY(USER_ID)
, CONSTRAINT USER_NUM_FK FOREIGN KEY(USER_NUM)
                         REFERENCES USER_LIST(USER_NUM)
, CONSTRAINT USER_NICK_UK UNIQUE(USER_NICKNAME)
, CONSTRAINT USER_TEL_UK UNIQUE(USER_TEL)
);
--==>> Table USING_USER이(가) 생성되었습니다.


--○ 포인트 적립 사유(POINT_LABEL)
CREATE TABLE POINT_LABEL
( POINT_LABEL_NUM     NUMBER
, POINT_RS            VARCHAR(200)  NOT NULL
, POINT               NUMBER(2)     NOT NULL
, CONSTRAINT POINT_LABEL_PK PRIMARY KEY(POINT_LABEL_NUM)
, CONSTRAINT POINT_RS_UK UNIQUE(POINT_RS)
);
--==>> Table POINT_LABEL이(가) 생성되었습니다.


--○ 포인트 적립 내역(POINT_HIS)
CREATE TABLE POINT_HISTORY
( POINT_HIS_NUM         NUMBER
, USER_NUM              CHAR(10)           NOT NULL
, ADD_DATE              DATE               DEFAULT SYSDATE
, POINT_LABEL_NUM       NUMBER             NOT NULL
, CONSTRAINT POINT_HISTORY_PK PRIMARY KEY(POINT_HIS_NUM)
, CONSTRAINT PH_USER_FK FOREIGN KEY(USER_NUM)
                        REFERENCES USER_LIST(USER_NUM)
, CONSTRAINT PH_PLABEL_FK FOREIGN KEY(POINT_LABEL_NUM)
                          REFERENCES POINT_LABEL(POINT_LABEL_NUM)
);
--==>> Table POINT_HISTORY이(가) 생성되었습니다.


--○ 입맛 키워드 리스트(TASTE_LABEL)
CREATE TABLE TASTE_LABEL
( TASTE_NUM         NUMBER
, TASTE_KEYWORD     VARCHAR(200)   NOT NULL
, CONSTRAINT TASTE_LABEL_PK PRIMARY KEY(TASTE_NUM)
, CONSTRAINT TASTE_KEY_UK UNIQUE(TASTE_KEYWORD)
);
--==>> Table TASTE_LABEL이(가) 생성되었습니다.


--○ 추천 받고 싶은 입맛 키워드(USER_TASTE)
CREATE TABLE USER_TASTE
( USER_TASTE_NUM       NUMBER
, USER_NUM             CHAR(10)    NOT NULL
, TASTE_NUM            NUMBER      NOT NULL
, CONSTRAINT USER_TASTE_PK PRIMARY KEY(USER_TASTE_NUM)
, CONSTRAINT UT_USER_FK FOREIGN KEY(USER_NUM)
                        REFERENCES USER_LIST(USER_NUM)
, CONSTRAINT UT_TASTE_FK FOREIGN KEY(TASTE_NUM)
                         REFERENCES TASTE_LABEL(TASTE_NUM)
);
--==>> Table USER_TASTE이(가) 생성되었습니다.


--○ 가게 등록 접수(IN_APPLY)
CREATE TABLE IN_APPLY
( IN_APPLY_NUM        NUMBER          
, USER_NUM            CHAR(10)          NOT NULL
, ST_IN_NUM           NUMBER	        NOT NULL
, ST_IN_FILE          VARCHAR2(2000)    NOT NULL
, ST_PLACE_NUM        NUMBER	        NOT NULL
, ST_PLACE_FILE       VARCHAR2(2000)    NOT NULL
, ST_NAME             VARCHAR2(200)     NOT NULL
, ST_LOCATION         VARCHAR2(500)     NOT NULL
, ST_TEL              VARCHAR2(100)     NOT NULL
, ADMIN_READ_DATE     DATE
, REG_DATE            DATE            	DEFAULT SYSDATE
, CONSTRAINT IN_APPLY_PK PRIMARY KEY(IN_APPLY_NUM)
, CONSTRAINT IN_USER_FK FOREIGN KEY(USER_NUM)
		   	REFERENCES USER_LIST(USER_NUM)
);
--==>> Table IN_APPLY이(가) 생성되었습니다.
ALTER TABLE IN_APPLY ADD ST_LOCATION_DT VARCHAR(300);


--○ 가게 등록 처리(IN_PROCESS)
CREATE TABLE IN_PROCESS
( IN_PROCESS_NUM      NUMBER
, IN_APPLY_NUM        NUMBER  NOT NULL
, FINAL_DATE          DATE    DEFAULT SYSDATE
, ADMIN_NUM           NUMBER  NOT NULL
, CHECK_DATE          DATE
, CONSTRAINT IN_PROCESS_PK PRIMARY KEY(IN_PROCESS_NUM)
, CONSTRAINT IP_APPLY_FK FOREIGN KEY(IN_APPLY_NUM)
		 	 REFERENCES IN_APPLY(IN_APPLY_NUM)
, CONSTRAINT IP_ADMIN_FK FOREIGN KEY(ADMIN_NUM)
			 REFERENCES ADMIN(ADMIN_NUM)
);
--==>> Table IN_PROCESS이(가) 생성되었습니다.


--○ 가게 등록 첫 로그인(IN_F_LOG)
CREATE TABLE IN_F_LOG
( IN_F_LOG_NUM     NUMBER
, IN_PROCESS_NUM   NUMBER   NOT NULL
, CONSTRAINT IN_F_LOG_PK PRIMARY KEY(IN_F_LOG_NUM)
, CONSTRAINT INF_PRO_FK FOREIGN KEY(IN_PROCESS_NUM)
         REFERENCES IN_PROCESS(IN_PROCESS_NUM)
);
--==>> Table IN_F_LOG이(가) 생성되었습니다.


--○ 가게 상태(ST_STATEMENT)
CREATE TABLE ST_STATEMENT
( STATEMENT_NUM		NUMBER
, STATEMENT_NAME	VARCHAR2(20)    NOT NULL
, CONSTRAINT ST_STATEMENT_PK PRIMARY KEY(STATEMENT_NUM)
, CONSTRAINT ST_NAME_UK UNIQUE(STATEMENT_NAME)
);
--==>> Table ST_STATEMENT이(가) 생성되었습니다.


--○ 지역 검색
CREATE TABLE REGION
( REGION_NUM	NUMBER
, REGION_NAME	VARCHAR2(30)	NOT NULL
, CONSTRAINT REGION_PK PRIMARY KEY(REGION_NUM)
, CONSTRAINT REGION_NAME_UK UNIQUE(REGION_NAME)
);
--==>> Table REGION이(가) 생성되었습니다.


--○ 가게 리스트(ST_LIST)
CREATE TABLE ST_LIST
( ST_NUM          NUMBER
, IN_PROCESS_NUM  NUMBER            NOT NULL
, ST_EXPLAIN      VARCHAR2(2000)
, MAX_CUSTOMERS   NUMBER
, ST_EMAIL        VARCHAR2(100)
, STATEMENT_NUM   NUMBER            DEFAULT 1
, REGION_NUM	  NUMBER            NOT NULL
, CONSTRAINT ST_LIST_PK PRIMARY KEY(ST_NUM)
, CONSTRAINT SL_INPRO_FK FOREIGN KEY(IN_PROCESS_NUM)
                         REFERENCES IN_PROCESS(IN_PROCESS_NUM)
, CONSTRAINT SL_STATEMENT_FK FOREIGN KEY(STATEMENT_NUM)
                   	     REFERENCES ST_STATEMENT(STATEMENT_NUM)
, CONSTRAINT SL_REGION_FK FOREIGN KEY(REGION_NUM)
			  REFERENCES REGION(REGION_NUM)
);
--==>> Table ST_LIST이(가) 생성되었습니다.


--○ 가게 키워드 리스트 (KEY)
CREATE TABLE ST_KEY_LABEL
( ST_KEY_NUM	NUMBER
, ST_KEYWORD	VARCHAR2(200)	NOT NULL
, CONSTRAINT ST_KEY_LABEL_PK PRIMARY KEY(ST_KEY_NUM)
, CONSTRAINT ST_KEYWORD_UK UNIQUE(ST_KEYWORD)
);
--==>> Table ST_KEY_LABEL이(가) 생성되었습니다.


--○ 가게가 선택한 키워드(ST_KEY)
CREATE TABLE ST_KEY
( ST_CHOSEN_KEY_NUM	NUMBER
, ST_NUM            	NUMBER	NOT NULL
, ST_KEY_NUM		NUMBER	NOT NULL
, CONSTRAINT ST_KEY_PK PRIMARY KEY(ST_CHOSEN_KEY_NUM)
, CONSTRAINT SK_STORE_FK FOREIGN KEY(ST_NUM)
			 REFERENCES ST_LIST(ST_NUM)
, CONSTRAINT SK_KEY_FK FOREIGN KEY(ST_KEY_NUM)
			    REFERENCES ST_KEY_LABEL(ST_KEY_NUM)
);
--==>> Table ST_KEY이(가) 생성되었습니다.


--○ 결제 수단 항목(PAY_LABEL)
CREATE TABLE PAY_LABEL
( PAY_NUM	NUMBER
, PAY_NAME	VARCHAR2(200)	NOT NULL
, CONSTRAINT PAY_LABEL_PK PRIMARY KEY(PAY_NUM)
, CONSTRAINT PAY_NAME_UK UNIQUE(PAY_NAME)
);
--==>> Table PAY_LABEL이(가) 생성되었습니다.


--○ 가게 결제 수단(STO_PAY)
CREATE TABLE ST_PAY
( ST_PAY_NUM	NUMBER	
, PAY_NUM       NUMBER	NOT NULL
, ST_NUM        NUMBER	NOT NULL
, CONSTRAINT ST_PAY_PK PRIMARY KEY(ST_PAY_NUM)
, CONSTRAINT SP_PAY_FK FOREIGN KEY(PAY_NUM)
		       REFERENCES PAY_LABEL(PAY_NUM)
, CONSTRAINT SP_STORE_FK FOREIGN KEY(ST_NUM)
			 REFERENCES ST_LIST(ST_NUM)
);
--==>> Table ST_PAY이(가) 생성되었습니다.


--○ 음식 카테고리 항목(FOOD_LABEL)
CREATE TABLE FOOD_LABEL
( FOOD_NUM	NUMBER
, FOOD_NAME	VARCHAR2(200)	NOT NULL
, CONSTRAINT FOOD_LABEL_PK PRIMARY KEY(FOOD_NUM)
, CONSTRAINT FOOD_NAME_UK UNIQUE(FOOD_NAME)
);
--==>> Table FOOD_LABEL이(가) 생성되었습니다.


--○ 가게 음식 카테고리(STO_FOOD_CAT)
CREATE TABLE ST_FOOD
( ST_FOOD_NUM	NUMBER
, FOOD_NUM      NUMBER	NOT NULL
, ST_NUM        NUMBER	NOT NULL
, CONSTRAINT ST_FOOD_PK PRIMARY KEY(ST_FOOD_NUM)
, CONSTRAINT SF_FOOD_FK FOREIGN KEY(FOOD_NUM)
			REFERENCES FOOD_LABEL(FOOD_NUM)
, CONSTRAINT SF_STORE_FK FOREIGN KEY(ST_NUM)
			 REFERENCES ST_LIST(ST_NUM)
);
--==>> Table ST_FOOD이(가) 생성되었습니다.


--○ 체크 박스 항목(CHBOX_LABEL)
CREATE TABLE CHBOX_LABEL
( CHBOX_NUM     NUMBER
, CHBOX_NAME	VARCHAR2(100)	NOT NULL
, CONSTRAINT CHBOX_LABEL_PK PRIMARY KEY(CHBOX_NUM)
, CONSTRAINT CHBOX_NAME_UK UNIQUE(CHBOX_NAME)
);
--==>> Table CHBOX_LABEL이(가) 생성되었습니다.


--○ 여부 항목(YN_LABEL)
CREATE TABLE YN_LABEL
( YN_NUM     NUMBER
, YN_NAME    VARCHAR2(10)  NOT NULL
, CONSTRAINT YN_LABEL_PK PRIMARY KEY(YN_NUM)
, CONSTRAINT YN_NAME_UK UNIQUE(YN_NAME)
);
--==>> Table YN_LABEL이(가) 생성되었습니다.


--○ 가게 체크박스(ST_CHBOX)
CREATE TABLE ST_CHBOX
( ST_CHBOX_NUM    NUMBER
, ST_NUM          NUMBER  NOT NULL
, CHBOX_NUM       NUMBER  NOT NULL
, YN_NUM          NUMBER
, CONSTRAINT ST_CHBOX_PK PRIMARY KEY(ST_CHBOX_NUM)
, CONSTRAINT SB_STORE_FK FOREIGN KEY(ST_NUM)
                         REFERENCES ST_LIST(ST_NUM)
, CONSTRAINT SB_CHBOX_FK FOREIGN KEY(CHBOX_NUM)
                         REFERENCES CHBOX_LABEL(CHBOX_NUM)
, CONSTRAINT SB_YN_FK FOREIGN KEY(YN_NUM)
		      REFERENCES YN_LABEL(YN_NUM)
);
--==>> Table ST_CHBOX이(가) 생성되었습니다.


--○ 가게 정보 수정 로그(UPDATE_LOG)
CREATE TABLE UPDATE_LOG
( UPDATE_NUM	NUMBER
, ST_CHBOX_NUM  NUMBER	NOT NULL
, UPDATE_DATE	DATE    DEFAULT SYSDATE
, CONSTRAINT UPDATE_LOG_PK PRIMARY KEY(UPDATE_NUM)
, CONSTRAINT UL_CHBOX_FK FOREIGN KEY(ST_CHBOX_NUM)
			 REFERENCES ST_CHBOX(ST_CHBOX_NUM)
);
--==>> Table UPDATE_LOG이(가) 생성되었습니다.


--○ 요일 리스트(WEEKDAY)
CREATE TABLE WEEKDAY_LABEL
( DAY_NUM	NUMBER
, DAY_NAME	VARCHAR2(12)	NOT NULL
, CONSTRAINT WEEKDAY_LABEL_PK PRIMARY KEY(DAY_NUM)
, CONSTRAINT WL_NAME_UK UNIQUE(DAY_NAME)
);
--==>> Table WEEKDAY_LABEL이(가) 생성되었습니다.


--○ 영업 시간(OPENCLOSE)
CREATE TABLE ST_OPENCLOSE
( ST_NUM        NUMBER		
, DAY_NUM       NUMBER
, START_TIME	VARCHAR2(20)
, END_TIME      VARCHAR2(20)
, CONSTRAINT ST_OPENCLOSE_PK PRIMARY KEY(ST_NUM, DAY_NUM)
, CONSTRAINT SO_STORE_FK FOREIGN KEY(ST_NUM)
			 REFERENCES ST_LIST(ST_NUM) 
, CONSTRAINT SO_DAY_FK FOREIGN KEY(DAY_NUM)
		       REFERENCES WEEKDAY_LABEL(DAY_NUM)
);
--==>> Table ST_OPENCLOSE이(가) 생성되었습니다.


--○ 휴무(HOLIDAY)
CREATE TABLE ST_HOLIDAY
( HOLIDAY_NUM	NUMBER	
, DAY_NUM       NUMBER	NOT NULL
, ST_NUM        NUMBER	NOT NULL
, CONSTRAINT ST_HOLDAY_PK PRIMARY KEY(HOLIDAY_NUM)
, CONSTRAINT SH_DAY_FK FOREIGN KEY(DAY_NUM)
		       REFERENCES WEEKDAY_LABEL(DAY_NUM)
, CONSTRAINT SH_STORE_FK FOREIGN KEY(ST_NUM)
			 REFERENCES ST_LIST(ST_NUM)
);
--==>> Table ST_HOLIDAY이(가) 생성되었습니다.


--○ 평일/주말 항목(WEEK_WEEKEND_LABEL)
CREATE TABLE WEEK_WEEKEND_LABEL
( WEEK_WEEKEND_NUM	NUMBER
, WEEK_WEEKEND		VARCHAR2(8)	NOT NULL
, CONSTRAINT WEEK_WEEKEND_PK PRIMARY KEY(WEEK_WEEKEND_NUM)
, CONSTRAINT WEEK_WEEKEND_UK UNIQUE(WEEK_WEEKEND)
);
--==>> Table WEEK_WEEKEND_LABEL이(가) 생성되었습니다.


--○ 쉬는 시간
CREATE TABLE BREAKTIME
( BREAKTIME_NUM     	NUMBER
, ST_NUM            	NUMBER          NOT NULL
, WEEK_WEEKEND_NUM	NUMBER          NOT NULL
, START_BREAKTIME	VARCHAR2(20)	NOT NULL
, END_BREAKTIME		VARCHAR2(20)	NOT NULL
, CONSTRAINT BREAKTIME_PK PRIMARY KEY(BREAKTIME_NUM)
, CONSTRAINT BT_STORE_FK FOREIGN KEY(ST_NUM)
				REFERENCES ST_LIST(ST_NUM)
, CONSTRAINT BT_WEEK_WEEKEND_FK FOREIGN KEY(WEEK_WEEKEND_NUM)
				REFERENCES WEEK_WEEKEND_LABEL(WEEK_WEEKEND_NUM)
);
--==>> Table BREAKTIME이(가) 생성되었습니다.


--○ 가게 사진(ST_PHOTO)
CREATE TABLE ST_PHOTO
( ST_PHOTO_NUM    NUMBER
, ST_NUM          NUMBER          NOT NULL
, PHOTO_LINK      VARCHAR2(2000)  NOT NULL
, CONSTRAINT ST_PHOTO_PK PRIMARY KEY(ST_PHOTO_NUM)
, CONSTRAINT STPHOTO_STORE_FK FOREIGN KEY(ST_NUM)
                    	      REFERENCES ST_LIST(ST_NUM)
);
--==>> Table ST_PHOTO이(가) 생성되었습니다.


--○ 대표사진 테이블
CREATE TABLE MAIN_PHOTO
( MAIN_PHOTO_NUM    NUMBER
, ST_PHOTO_NUM      NUMBER  NOT NULL
, CONSTRAINT MAIN_PHOTO_PK PRIMARY KEY(MAIN_PHOTO_NUM)
, CONSTRAINT MP_PHOTO_FK FOREIGN KEY(ST_PHOTO_NUM)
                         REFERENCES ST_PHOTO(ST_PHOTO_NUM)
, CONSTRAINT MP_PHOTO_UK UNIQUE(ST_PHOTO_NUM)
);
--==>> Table MAIN_PHOTO이(가) 생성되었습니다.

--○ 메뉴(MENU)
CREATE TABLE MENU
( MENU_NUM	NUMBER
, ST_NUM	NUMBER              NOT NULL
, MENU_NAME     VARCHAR2(200)	    NOT NULL
, PRICE         NUMBER              NOT NULL
, IMAGE_LINK	VARCHAR2(2000)
, CONSTRAINT MENU_PK PRIMARY KEY(MENU_NUM)
, CONSTRAINT MENU_STORE_FK FOREIGN KEY(ST_NUM)
	  		   REFERENCES ST_LIST(ST_NUM)
);
--==>> Table MENU이(가) 생성되었습니다.


--○ 가게 검색 키워드(SEARCH_KEY)
CREATE TABLE SEARCH_KEY
( SEARCH_NUM       NUMBER
, ST_NUM           NUMBER       NOT NULL
, SEARCH_NAME      VARCHAR2(50) NOT NULL
, COUNT            NUMBER       DEFAULT 1
, CONSTRAINT SEARCH_KEY_PK PRIMARY KEY(SEARCH_NUM)
, CONSTRAINT SEARCHK_STORE_FK FOREIGN KEY(ST_NUM)
                       REFERENCES ST_LIST(ST_NUM)
);
--==>> Table SEARCH_KEY이(가) 생성되었습니다.


--○ 가게 등록 반려 사유(IN_REJ)
CREATE TABLE IN_REJ
( IN_REJ                NUMBER          
, REJ_RS                VARCHAR2(1000)  NOT NULL
, IN_PROCESS_NUM        NUMBER	        NOT NULL
, CONSTRAINT IN_REJ_PK PRIMARY KEY(IN_REJ)
, CONSTRAINT IR_PRO_FK FOREIGN KEY(IN_PROCESS_NUM)
		       REFERENCES IN_PROCESS(IN_PROCESS_NUM)
);
--==>> Table IN_REJ이(가) 생성되었습니다.


--○ 가게 폐업 신청(OUT_APPLY)
CREATE TABLE OUT_APPLY
( OUT_APPLY_NUM         NUMBER      
, IN_PROCESS_NUM        NUMBER      NOT NULL
, REG_DATE              DATE        DEFAULT SYSDATE
, ADMIN_READ_DATE       DATE
, CONSTRAINT OUT_APPLY_PK PRIMARY KEY(OUT_APPLY_NUM)
, CONSTRAINT OA_INPRO_FK FOREIGN KEY(IN_PROCESS_NUM)
                         REFERENCES IN_PROCESS(IN_PROCESS_NUM)
, CONSTRAINT OA_INPRO_UK UNIQUE(IN_PROCESS_NUM)
);
--==>> Table OUT_APPLY이(가) 생성되었습니다.


--○ 가게 폐업 처리(OUT_PROCESS)
CREATE TABLE OUT_PROCESS
( OUT_PROCESS_NUM     NUMBER
, OUT_APPLY_NUM       NUMBER  NOT NULL
, FINAL_DATE          DATE    DEFAULT SYSDATE
, ADMIN_NUM           NUMBER  NOT NULL
, CHECK_DATE          DATE
, CONSTRAINT OUT_PROCESS_PK PRIMARY KEY(OUT_PROCESS_NUM)
, CONSTRAINT OP_APPLY_FK FOREIGN KEY(OUT_APPLY_NUM)
                         REFERENCES OUT_APPLY(OUT_APPLY_NUM)
, CONSTRAINT OP_ADMIN_FK FOREIGN KEY(ADMIN_NUM)
                         REFERENCES ADMIN(ADMIN_NUM)
);
--==>> Table OUT_PROCESS이(가) 생성되었습니다.


--○ 가게 폐업 첫 로그인(OUT_F_LOG)
CREATE TABLE OUT_F_LOG
( OUT_F_LOG_NUM 	NUMBER
, OUT_PROCESS_NUM	NUMBER	NOT NULL
, CONSTRAINT OUT_F_LOG_PK PRIMARY KEY(OUT_F_LOG_NUM)
, CONSTRAINT OFL_PRO_PK FOREIGN KEY(OUT_PROCESS_NUM)
			      REFERENCES OUT_PROCESS(OUT_PROCESS_NUM)
);
--==>> Table OUT_F_LOG이(가) 생성되었습니다.


--○ 가게 폐업 신청 반려 사유(OUT_REJ)
CREATE TABLE OUT_REJ
( OUT_REJ_NUM	        NUMBER              
, REJ_RS                VARCHAR2(1000)  NOT NULL
, OUT_PROCESS_NUM       NUMBER          NOT NULL
, CONSTRAINT OUT_REJ_PK PRIMARY KEY(OUT_REJ_NUM)
, CONSTRAINT OR_PRO_FK FOREIGN KEY(OUT_PROCESS_NUM)
				  REFERENCES OUT_PROCESS(OUT_PROCESS_NUM)
);
--==>> Table OUT_REJ이(가) 생성되었습니다.


--○ 찜한(LIKE_BOX)
CREATE TABLE LIKE_BOX
( LIKE_NUM    	 	NUMBER
, USER_NUM      	CHAR(10)     NOT NULL
, ST_NUM         	NUMBER       NOT NULL
, REG_DATE         	DATE         DEFAULT SYSDATE
, CONSTRAINT LIKE_BOX_PK PRIMARY KEY(LIKE_NUM)
, CONSTRAINT LB_USER_FK FOREIGN KEY(USER_NUM)
                     REFERENCES USER_LIST(USER_NUM)
, CONSTRAINT LB_STORE_FK FOREIGN KEY(ST_NUM)
                	 REFERENCES ST_LIST(ST_NUM)
);
--==>> Table LIKE_BOX이(가) 생성되었습니다.


--○ 비교했던(COMPARED_BOX)
CREATE TABLE COMPARED_BOX
( COMPARED_NUM  	NUMBER
, USER_NUM      	CHAR(10)     NOT NULL
, ST_NUM           	NUMBER       NOT NULL
, REG_DATE    		DATE	     DEFAULT SYSDATE
, CONSTRAINT COMPARED_BOX_PK PRIMARY KEY(COMPARED_NUM)
, CONSTRAINT CB_USER_FK FOREIGN KEY(USER_NUM)
                        REFERENCES USER_LIST(USER_NUM)
, CONSTRAINT CB_STORE_FK FOREIGN KEY(ST_NUM)
                	 REFERENCES ST_LIST(ST_NUM)
);
--==>> Table COMPARED_BOX이(가) 생성되었습니다.


--○ 비교함(COMPARING_BOX)
CREATE TABLE COMPARING_BOX
( COMPARING_NUM     	NUMBER
, USER_NUM   	       	CHAR(10)    NOT NULL
, ST_NUM            	NUMBER      NOT NULL
, REG_DATE     		DATE        DEFAULT SYSDATE
, CONSTRAINT COMPARING_BOX_PK PRIMARY KEY(COMPARING_NUM)
, CONSTRAINT CINGB_USER_FK FOREIGN KEY(USER_NUM)
                        REFERENCES USER_LIST(USER_NUM)
, CONSTRAINT CINGB_STORE_FK FOREIGN KEY(ST_NUM)
              		 REFERENCES ST_LIST(ST_NUM)
);
--==>> Table COMPARING_BOX이(가) 생성되었습니다.


--○ 리뷰키워드리스트 T(RV_KEY_LABEL)
CREATE TABLE RV_KEY_LABEL
( RV_KEY_NUM      NUMBER
, RV_KEY_NAME     VARCHAR2(200)  NOT NULL
, CONSTRAINT RV_KEY_LABEL PRIMARY KEY(RV_KEY_NUM)
, CONSTRAINT RVKEY_NAME_UK UNIQUE(RV_KEY_NAME)
);
--==>> Table RV_KEY_LABEL이(가) 생성되었습니다.
--> ERD작성중

--○ 작성된 리뷰(RV_BOX)
CREATE TABLE RV_BOX
( RV_NUM         NUMBER
, USER_NUM       CHAR(10)        NOT NULL
, ST_NUM         NUMBER          NOT NULL
, RV_CONTENT     VARCHAR2(2000)  NOT NULL
, STAR_SCORE     NUMBER(1)       NOT NULL
, REG_DATE       DATE            DEFAULT SYSDATE
, CONSTRAINT RV_BOX_PK PRIMARY KEY(RV_NUM)
, CONSTRAINT RB_USER_FK FOREIGN KEY(USER_NUM)
                        REFERENCES USER_LIST(USER_NUM)
, CONSTRAINT RB_STORE_FK FOREIGN KEY(ST_NUM)
                        REFERENCES ST_LIST(ST_NUM)
);
--==>> Table RV_BOX이(가) 생성되었습니다.


--○ 사용자가 선택한 리뷰 키워드 T(RV_KEY)
CREATE TABLE RV_KEY
( CHOSEN_RV_KEY_NUM      NUMBER
, ST_NUM                 NUMBER   NOT NULL
, RV_KEY_NUM             NUMBER   NOT NULL
, COUNT                  NUMBER   DEFAULT 1
, CONSTRAINT RV_KEY_PK PRIMARY KEY(CHOSEN_RV_KEY_NUM)
, CONSTRAINT RK_ST_FK FOREIGN KEY(ST_NUM)
                    REFERENCES ST_LIST(ST_NUM)
, CONSTRAINT RV_RV_KEY_FK FOREIGN KEY(RV_KEY_NUM)
		    REFERENCES RV_KEY_LABEL(RV_KEY_NUM)
);
--==>> Table RV_KEY이(가) 생성되었습니다.

--○ 리뷰 사진 T(RV_PHOTO)
CREATE TABLE RV_PHOTO
( RV_PHOTO_NUM	  NUMBER
, RV_NUM      	  NUMBER   	    NOT NULL
, PHOTO_LINK      VARCHAR2(2000)    NOT NULL
, CONSTRAINT RV_PHOTO_PK PRIMARY KEY(RV_PHOTO_NUM)
, CONSTRAINT RP_RV_FK FOREIGN KEY(RV_NUM)
                    REFERENCES RV_BOX(RV_NUM)
);
--==>> Table RV_PHOTO이(가) 생성되었습니다.


--○ 리뷰 답변(RV_REP)
CREATE TABLE RV_REPLY
( REPLY_NUM        NUMBER
, RV_NUM           NUMBER           NOT NULL
, REPLY_CONTENT    VARCHAR2(2000)   NOT NULL
, REG_DATE     	   DATE             DEFAULT SYSDATE
, CONSTRAINT RV_REPLY_PK PRIMARY KEY(REPLY_NUM)
, CONSTRAINT RR_RV_FK FOREIGN KEY(RV_NUM)
                    REFERENCES RV_BOX(RV_NUM)
);
--==>> Table RV_REPLY이(가) 생성되었습니다.


--○ 추천/비추천 항목(REC_NONREC)
CREATE TABLE REC_NONREC
( REC_NONREC_NUMBER      NUMBER
, REC_NONREC_NAME   	 VARCHAR(20)  NOT NULL
, CONSTRAINT REC_NONREC_PK PRIMARY KEY(REC_NONREC_NUMBER)
, CONSTRAINT RN_NAME_UK UNIQUE(REC_NONREC_NAME)
);
--==>> Table REC_NONREC이(가) 생성되었습니다.


--○ 리뷰 추천/비추천(RV_REC_NONREC)
CREATE TABLE RV_REC_NONREC
( RV_NUM       
NUMBER
, USER_NUM             CHAR(10)
, REC_NONREC_NUMBER    NUMBER   NOT NULL
, REG_DATE  	       DATE     DEFAULT SYSDATE
, CONSTRAINT RV_REC_NONREC_PK PRIMARY KEY(RV_NUM, USER_NUM)
, CONSTRAINT RRN_RV_FK FOREIGN KEY(RV_NUM)
                    REFERENCES RV_BOX(RV_NUM)
, CONSTRAINT RRN_USER_FK FOREIGN KEY(USER_NUM)
                    REFERENCES USER_LIST(USER_NUM)
, CONSTRAINT RRN_RECNONREC_FK FOREIGN KEY(REC_NONREC_NUMBER)
                    REFERENCES REC_NONREC(REC_NONREC_NUMBER)
);
--==>> Table RV_REC_NONREC이(가) 생성되었습니다.


--○ 리뷰 신고 사유 항목(REP_RS_LABEL)
CREATE TABLE REP_RS_LABEL
( REP_RS_NUM        NUMBER
, REP_RS_NAME       VARCHAR2(200)   NOT NULL
, CONSTRAINT REP_RS_LABEL_PK PRIMARY KEY(REP_RS_NUM)
, CONSTRAINT RRL_NAME_UK UNIQUE(REP_RS_NAME)
);
--==>> Table REP_RS_LABEL이(가) 생성되었습니다.


--○ 리뷰 신고 접수(REP_APPLY)
CREATE TABLE REP_APPLY
( REP_APPLY_NUM      NUMBER
, RV_NUM             NUMBER      NOT NULL
, USER_NUM           CHAR(10)    NOT NULL
, REG_DATE           DATE        DEFAULT SYSDATE
, REP_RS_NUM         NUMBER	 NOT NULL
, ADMIN_READ_DATE    DATE
, ACCU_READ_DATE     DATE
, CONSTRAINT REP_APPLY_PK PRIMARY KEY(REP_APPLY_NUM)
, CONSTRAINT RA_RV_FK FOREIGN KEY(RV_NUM)
		      	REFERENCES RV_BOX(RV_NUM)
, CONSTRAINT RA_USER_FK FOREIGN KEY(USER_NUM)
			REFERENCES USER_LIST(USER_NUM)
, CONSTRAINT RA_RS_FK FOREIGN KEY(REP_RS_NUM)
			REFERENCES REP_RS_LABEL(REP_RS_NUM)
);
--==>> Table REP_APPLY이(가) 생성되었습니다.


--○ 리뷰 신고 처리(REP_PROCESS)
CREATE TABLE REP_PROCESS
( REP_PROCESS_NUM          NUMBER
, REP_APPLY_NUM            NUMBER  NOT NULL
, ADMIN_NUM                NUMBER  NOT NULL
, FINAL_DATE  	           DATE    DEFAULT SYSDATE
, REP_READ_DATE            DATE
, ACCU_READ_DATE     	   DATE
, CONSTRAINT REP_PROCESS_PK PRIMARY KEY(REP_PROCESS_NUM)
, CONSTRAINT RPRO_APPLY_FK FOREIGN KEY(REP_APPLY_NUM)
				 REFERENCES REP_APPLY(REP_APPLY_NUM)
, CONSTRAINT RPRO_ADMIN_FK FOREIGN KEY(ADMIN_NUM)
			   REFERENCES ADMIN(ADMIN_NUM)
);
--==>> Table REP_PROCESS이(가) 생성되었습니다.


--○ 리뷰 신고 반려 사유(REP_REJ)
CREATE TABLE REP_REJ
( REP_REJ_NUM          NUMBER
, REJ_RS               VARCHAR2(2000)  NOT NULL
, REP_PROCESS_NUM      NUMBER          NOT NULL
, CONSTRAINT REP_REJ_PK PRIMARY KEY(REP_REJ_NUM)
, CONSTRAINT RREJ_PROCESS_FK FOREIGN KEY(REP_PROCESS_NUM)
				 REFERENCES REP_PROCESS(REP_PROCESS_NUM)
);
--==>> Table REP_REJ이(가) 생성되었습니다.


--○ 가게 정보 오류 수정 요청 접수(REQ_APPLY)
CREATE TABLE REQ_APPLY
( REQ_APPLY_NUM         NUMBER
, USER_NUM              CHAR(10)        NOT NULL
, REG_DATE              DATE            DEFAULT SYSDATE
, ST_CHBOX_NUM          NUMBER          NOT NULL
, REQ_RS	    	    VARCHAR2(2000)  NOT NULL
, ADMIN_READ_DATE       DATE
, CONSTRAINT REQ_APPLY_PK PRIMARY KEY (REQ_APPLY_NUM)
, CONSTRAINT REQA_USER_FK FOREIGN KEY (USER_NUM)
                          REFERENCES USER_LIST(USER_NUM)
, CONSTRAINT REQA_STCH_FK FOREIGN KEY (ST_CHBOX_NUM)
                             REFERENCES ST_CHBOX(ST_CHBOX_NUM)
);
--==>> Table REQ_APPLY이(가) 생성되었습니다.


--○ 가게 정보 오류 요청 처리(REQ_PROCESS)
CREATE TABLE REQ_PROCESS
( REQ_PROCESS_NUM     NUMBER
, REQ_APPLY_NUM      NUMBER  NOT NULL 
, ADMIN_NUM          NUMBER  NOT NULL
, FINAL_DATE         DATE    DEFAULT SYSDATE
, CONSTRAINT REQ_PROCESS_PK PRIMARY KEY (REQ_PROCESS_NUM)
, CONSTRAINT REQP_APPLY_FK FOREIGN KEY (REQ_APPLY_NUM)
                              REFERENCES REQ_APPLY(REQ_APPLY_NUM)
, CONSTRAINT REQP_ADMIN_FK FOREIGN KEY (ADMIN_NUM)
                                REFERENCES ADMIN(ADMIN_NUM)
);
--==>> Table REQ_PROCESS이(가) 생성되었습니다.
ALTER TABLE REQ_PROCESS ADD USER_READ_DATE DATE;
ALTER TABLE REQ_PROCESS ADD ST_READ_DATE DATE;


--○ 가게 정보 오류 요청 반려 사유(REQ_REJ)
CREATE TABLE REQ_REJ
( REQ_REJ_NUM           NUMBER
, REQ_PROCESS_NUM       NUMBER           NOT NULL
, REJ_RS                VARCHAR2(2000)   NOT NULL
, CONSTRAINT REQ_REJ_PK PRIMARY KEY (REQ_REJ_NUM )
, CONSTRAINT REQR_PROCESS_FK FOREIGN KEY (REQ_PROCESS_NUM)
                              REFERENCES REQ_PROCESS(REQ_PROCESS_NUM)
);
--==>> Table REQ_REJ이(가) 생성되었습니다.


--○ 이의 제기 접수(OBJ_APPLY)
CREATE TABLE OBJ_APPLY
( OBJ_APPLY_NUM             NUMBER
, OBJ_RS                    VARCHAR2(2000)  NOT NULL
, REQ_PROCESS_NUM     	    NUMBER          NOT NULL
, ADMIN_READ_DATE           DATE
, REG_DATE                  DATE            DEFAULT SYSDATE
, CONSTRAINT OBJ_APPLY_PK PRIMARY KEY(OBJ_APPLY_NUM)
, CONSTRAINT OA_REQPRO_FK FOREIGN KEY(REQ_PROCESS_NUM)
                            REFERENCES REQ_PROCESS(REQ_PROCESS_NUM)
);
--==>> Table OBJ_APPLY이(가) 생성되었습니다


--○ 이의 제기 사진(OBJ_PHO)
CREATE TABLE OBJ_PHOTO
( OBJ_PHOTO_NUM     NUMBER
, OBJ_APPLY_NUM     NUMBER           NOT NULL
, PHOTO_LINK        VARCHAR2(2000)   NOT NULL
, CONSTRAINT OBJ_PHOTO_PK PRIMARY KEY(OBJ_PHOTO_NUM)
, CONSTRAINT OPH_APPLY_FK FOREIGN KEY (OBJ_APPLY_NUM)
                          REFERENCES OBJ_APPLY(OBJ_APPLY_NUM)
);
--==>> Table OBJ_PHOTO이(가) 생성되었습니다.


--○ 이의 제기 처리(OBJ_PRO)
CREATE TABLE OBJ_PROCESS
( OBJ_PROCESS_NUM             NUMBER
, OBJ_APPLY_NUM               NUMBER          NOT NULL
, FINAL_DATE                  DATE            DEFAULT SYSDATE
, ADMIN_NUM                   NUMBER          NOT NULL
, USER_READ_DATE  	          DATE
, ST_READ_DATE      	      DATE
, CONSTRAINT OBJ_PROCESS_PK PRIMARY KEY(OBJ_PROCESS_NUM)
, CONSTRAINT OPRO_ADMIN_FK FOREIGN KEY(ADMIN_NUM)
                                REFERENCES ADMIN(ADMIN_NUM)
);
--==>> Table OBJ_PROCESS이(가) 생성되었습니다.


--○ 이의 제기 반려 사유(OBJ_REJ_RS)
CREATE TABLE OBJ_REJ
( OBJ_REJ_NUM             NUMBER
, REJ_RS                  VARCHAR2(2000)  NOT NULL
, OBJ_PROCESS_NUM         NUMBER          NOT NULL
, CONSTRAINT OBJ_REJ_PK PRIMARY KEY (OBJ_REJ_NUM)
, CONSTRAINT OR_PROCESS_FK FOREIGN KEY (OBJ_PROCESS_NUM)
                          REFERENCES OBJ_PROCESS(OBJ_PROCESS_NUM)
);
--==>> Table OBJ_REJ이(가) 생성되었습니다.


--○ 승인 번복 사유(APPLY_REVERSE)
CREATE TABLE APPLY_REVERSE
( APPLY_REVERSE_NUM	    NUMBER
, REVERSE_RS            VARCHAR2(2000)  NOT NULL 
, OBJ_PROCESS_NUM       NUMBER          NOT NULL
, CONSTRAINT APPLY_REVERSE_PK PRIMARY KEY (APPLY_REVERSE_NUM)
, CONSTRAINT AR_PROCESS_FK FOREIGN KEY (OBJ_PROCESS_NUM)
                          REFERENCES OBJ_PROCESS(OBJ_PROCESS_NUM)
);
--==>> Table APPLY_REVERSE이(가) 생성되었습니다.


--○ 패널티 종류 고유 항목(PEN_TYPE_LABEL)
CREATE TABLE PEN_TYPE_LABEL
( PEN_TYPE_NUM        NUMBER
, PEN_TYPE_NAME       VARCHAR2(200)    NOT NULL
, CONSTRAINT PEN_TYPE_LABEL_PK PRIMARY KEY(PEN_TYPE_NUM)
, CONSTRAINT PEN_NAME_UK UNIQUE (PEN_TYPE_NAME)
);
--==>> Table PEN_TYPE_LABEL이(가) 생성되었습니다.


--○ 패널티(PENALTY)
CREATE TABLE PENALTY
( PEN_GRANT_NUM           NUMBER
, REQ_PROCESS_NUM         NUMBER  NOT NULL
, GRANT_DATE              DATE    DEFAULT SYSDATE
, PEN_TYPE_NUM            NUMBER  NOT NULL
, CONSTRAINT PENALTY_PK PRIMARY KEY (PEN_GRANT_NUM)
, CONSTRAINT PEN_REQPRO_N FOREIGN KEY (REQ_PROCESS_NUM)
                          REFERENCES REQ_PROCESS(REQ_PROCESS_NUM)
);
--==>> Table PENALTY이(가) 생성되었습니다.


--○ 패널티 회수 요청(REVO_APPLY)
CREATE TABLE REVO_APPLY
( REVO_APPLY_NUM      NUMBER
, PEN_GRANT_NUM       NUMBER          NOT NULL
, REG_DATE            DATE            DEFAULT SYSDATE
, ST_CHBOX_NUM        NUMBER          NOT NULL
, REVO_RS             VARCHAR2(2000)  NOT NULL
, ADMIN_READ_DATE     DATE
, CONSTRAINT REVO_APPLY_PK PRIMARY KEY (REVO_APPLY_NUM)
, CONSTRAINT REVAP_GRANT_FK FOREIGN KEY (PEN_GRANT_NUM)
                           REFERENCES PENALTY(PEN_GRANT_NUM)
, CONSTRAINT REVAP_STCH_FK  FOREIGN KEY (ST_CHBOX_NUM)
                            REFERENCES ST_CHBOX(ST_CHBOX_NUM)
);
--==>> Table REVO_APPLY이(가) 생성되었습니다.


--○ 패널티 회수 사진(REVO_PHOTO)
CREATE TABLE REVO_PHOTO
( REVO_PHOTO_NUM     NUMBER
, REVO_APPLY_NUM     NUMBER           NOT NULL
, PHOTO_LINK         VARCHAR2(2000)   NOT NULL
, CONSTRAINT REVO_PHOTO_PK PRIMARY KEY (REVO_PHOTO_NUM)
, CONSTRAINT REVPH_APPLY_FK FOREIGN KEY (REVO_APPLY_NUM)
                            REFERENCES REVO_APPLY(REVO_APPLY_NUM)
);
--==>> Table REVO_PHOTO이(가) 생성되었습니다.


--○ 패널티 회수 요청 처리(REVO_PROCESS)
CREATE TABLE REVO_PROCESS
( REVO_PROCESS_NUM    NUMBER
, REVO_APPLY_NUM      NUMBER  NOT NULL
, FINAL_DATE          DATE    DEFAULT SYSDATE
, ADMIN_NUM           NUMBER  NOT NULL
, ST_READ_DATE        DATE
, CONSTRAINT REVO_PROCESS_PK  PRIMARY KEY (REVO_PROCESS_NUM)
, CONSTRAINT REVPR_APPLY_FK FOREIGN KEY (REVO_APPLY_NUM)
                            REFERENCES REVO_APPLY(REVO_APPLY_NUM)
, CONSTRAINT REVPR_ADMIN_FK FOREIGN KEY (ADMIN_NUM)
                            REFERENCES ADMIN(ADMIN_NUM)
);
--==>> Table REVO_PROCESS이(가) 생성되었습니다.


--○ 패널티 반려사유(REVO_REJ)
CREATE TABLE REVO_REJ
( REVO_REJ_NUM        NUMBER
, REJ_RS              VARCHAR2(2000)  NOT NULL
, REVO_PROCESS_NUM    NUMBER          NOT NULL
, CONSTRAINT REVO_REJ_PK PRIMARY KEY (REVO_REJ_NUM)
, CONSTRAINT REVREJ_PROCESS_FK FOREIGN KEY (REVO_PROCESS_NUM)
                           REFERENCES REVO_PROCESS(REVO_PROCESS_NUM)
);
--==>> Table REVO_REJ이(가) 생성되었습니다.


--○ 탈퇴한 회원 정보(LEAVE_USER)
CREATE TABLE LEAVE_USER
( USER_ID            VARCHAR2(40)
, USER_PW            VARCHAR2(60)  NOT NULL
, USER_NUM           CHAR(10)      NOT NULL
, USER_NAME          VARCHAR2(30)  NOT NULL
, USER_SSN1          CHAR(6)       NOT NULL
, USER_SSN2          CHAR(7)       NOT NULL
, USER_TEL           VARCHAR2(20)  NOT NULL
, USER_NICKNAME      VARCHAR2(40)  NOT NULL
, USER_EMAIL         VARCHAR2(300)
, USER_IN_DATE       DATE          NOT NULL
, LEAVE_DATE         DATE          DEFAULT SYSDATE
, CONSTRAINT LEAVE_USER_PK PRIMARY KEY(USER_ID)
, CONSTRAINT LU_USER_FK FOREIGN KEY(USER_NUM)
                    REFERENCES USER_LIST(USER_NUM)
, CONSTRAINT LU_NICK_UK UNIQUE(USER_NICKNAME)
, CONSTRAINT LU_TEL_UK UNIQUE(USER_TEL)
);
--==>> Table LEAVE_USER이(가) 생성되었습니다.


--○ 대표 가게 설정
CREATE TABLE REP_STORE
( REP_ST_NUM    NUMBER  
, ST_NUM        NUMBER      NOT NULL
, USER_NUM      CHAR(10)    NOT NULL
, CONSTRAINT REP_ST_PK  PRIMARY KEY(REP_ST_NUM)
, CONSTRAINT REP_ST_FK  FOREIGN KEY(ST_NUM)
                        REFERENCES ST_LIST(ST_NUM)
, CONSTRAINT REP_USER_CK UNIQUE(USER_NUM)
);
--==> Table REP_STORE이(가) 생성되었습니다.



--○ 등급 테이블
CREATE TABLE MEMBERSHIP
( MEMBERSHIP_NUM    NUMBER(5)
, MEMBERSHIP_NAME   VARCHAR(50) NOT NULL
, BORDER_POINT      NUMBER      NOT NULL
, BORDER_REVIEW     NUMBER      NOT NULL
, CONSTRAINT MEMBERSHIP_PK PRIMARY KEY(MEMBERSHIP_NUM)
, CONSTRAINT MEMBERSHIP_NAME_UK UNIQUE(MEMBERSHIP_NAME)
);
--==>> Table MEMBERSHIP이(가) 생성되었습니다.

--○ 가게가 입력한 검색 키워드
CREATE TABLE ST_SEARCH_KEY
( ST_NUM            NUMBER
, SEARCH_NUM        NUMBER
, CONSTRAINT ST_SKEY_PK PRIMARY KEY(ST_NUM, SEARCH_NUM)
, CONSTRAINT SKEY_ST_NUM_FK FOREIGN KEY(ST_NUM)
                            REFERENCES ST_LIST(ST_NUM)
, CONSTRAINT SKEY_SEARCH_NUM_FK FOREIGN KEY(SEARCH_NUM)
                                REFERENCES SEARCH_KEY(SEARCH_NUM)
);
--==>> Table ST_SEARCH_KEY이(가) 생성되었습니다.

--○ 중재 사유 테이블
CREATE TABLE REP_MID
( REP_MID_NUM          NUMBER
, MID_RS               VARCHAR2(2000)  NOT NULL
, REP_PROCESS_NUM      NUMBER          NOT NULL
, CONSTRAINT REP_MID_PK PRIMARY KEY(REP_MID_NUM)
, CONSTRAINT RMID_PROCESS_FK FOREIGN KEY(REP_PROCESS_NUM)
				 REFERENCES REP_PROCESS(REP_PROCESS_NUM)
);
--==>> Table REP_MID이(가) 생성되었습니다.